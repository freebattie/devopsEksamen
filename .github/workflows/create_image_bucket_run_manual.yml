name: Run Create Bucket and Copy Images Manual

on:
  workflow_dispatch:
env:
  IMAGE_CONTAINER: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/student2012-private
  BUCKET_NAME: kandidat-id-2012
jobs:
  create_s3_image_bucket:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      PORT: 8080

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check if Image Bucket Exists
        id: check-bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        run: |
          
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          if aws s3api head-bucket --region eu-west-1  --bucket $BUCKET_NAME 2>/dev/null; then
          echo "Bucket exists"
          echo "::set-output name={bucket_exists}::{true}"
          else
          echo "Bucket does not exist"
          echo "::set-output name={bucket_exists}::{false}"
          fi

      - name: Create Image Bucket and folders
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        if: steps.check-bucket.outputs.bucket_exists != 'true'
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3api create-bucket --bucket $BUCKET_NAME --region eu-west-1  --create-bucket-configuration LocationConstraint=eu-west-1
          aws s3api put-object --region eu-west-1 --bucket $BUCKET_NAME --key camera/exit
          aws s3api put-object --region eu-west-1 --bucket $BUCKET_NAME --key camera/entrance
          aws s3api put-object --region eu-west-1 --bucket $BUCKET_NAME --key camera/private
          aws s3api put-object --region eu-west-1 --bucket $BUCKET_NAME --key camera/employee

  copy_files_to_s3_bucket:
    runs-on: ubuntu-latest
    needs: create_s3_image_bucket

    steps:
      - name: Check if Image Bucket Exists
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        run: |
          if aws s3api head-bucket --region eu-west-1  --bucket $BUCKET_NAME 2>/dev/null; then
          echo "Bucket exists"
          echo "::set-output name=bucket_exists::true"
          else
          echo "Bucket does not exist"
          echo "::set-output name=bucket_exists::false"
          fi
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check if Bucket  Folder camera/pictures has images
        id: s3-check
        run: |
          object_count=$(aws s3 --region eu-west-1  ls s3://$BUCKET_NAME/camera/pictures/ | wc -l)
          echo "::set-output name=object_count::$object_count"

      - name: Copy Images If Folder is Empty
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        if: ${{ steps.s3-check.outputs.object_count == '0' }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3 cp /pictures s3://$BUCKET_NAME/camera/pictures/ --recursive
          aws s3 cp /pictures/petter.jpg s3://$BUCKET_NAME/camera/employee/petter.jpg 
          aws s3 cp /pictures/kari.jpg s3://$BUCKET_NAME/camera/employee/kari.jpg 
          aws s3 cp /pictures/stine.jpg s3://$BUCKET_NAME/camera/employee/stine.jpg 
  
  
