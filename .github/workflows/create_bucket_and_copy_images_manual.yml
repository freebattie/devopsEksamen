name: create new Image Bucket

on:
  workflow_dispatch:
env:
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}
jobs:
  create_s3_image_bucket:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION:  ${{ vars.AWS_REGION }}
      PORT: ${{ vars.PORT }}

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Image Bucket and folders
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ vars.AWS_REGION }}

        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3api create-bucket --bucket $BUCKET_NAME --region eu-west-1  --create-bucket-configuration LocationConstraint=eu-west-1

  copy_files_to_s3_bucket:
    runs-on: ubuntu-latest
    needs: create_s3_image_bucket

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Copy Images
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ vars.AWS_REGION }}


        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3 cp ./pictures s3://$BUCKET_NAME/camera/pictures/ --recursive
          aws s3 cp ./testfile.txt  s3://$BUCKET_NAME/camera/exit/
          aws s3 cp testfile.txt  s3://$BUCKET_NAME/camera/entrance/
          aws s3 cp testfile.txt  s3://$BUCKET_NAME/camera/private/
          aws s3 cp testfile.txt  s3://$BUCKET_NAME/camera/employee/
  
