name: Delete Image Bucket and Create New Image Bucket

on:
  workflow_dispatch:
env:
  IMAGE_CONTAINER: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/student2012-private
  BUCKET_NAME: kandidat-id-2012
jobs:
  delete_files:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      PORT: 8080

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Image Bucket and folders
        if: ${{ env.BUCKET_EXISTS != 'true' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3 rm s3://$BUCKET_NAME --recursive
  delete_image_bucket:
    needs: delete_files
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      PORT: 8080

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Image Bucket and folders
        if: ${{ env.BUCKET_EXISTS != 'true' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3 rb s3://$BUCKET_NAME
          

  create_s3_image_bucket:
    needs: delete_image_bucket
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      PORT: 8080

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Image Bucket and folders
        if: ${{ env.BUCKET_EXISTS != 'true' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3api create-bucket --bucket $BUCKET_NAME --region eu-west-1  --create-bucket-configuration LocationConstraint=eu-west-1
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/exit/testfile.txt
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/entrance/testfile.txt
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/private/testfile.txt
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/employee/testfile.txt

  copy_files_to_s3_bucket:
    runs-on: ubuntu-latest
    needs: create_s3_image_bucket

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Copy Images If Folder is Empty
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        if: ${{ steps.s3-check.outputs.object_count == '0' }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          aws s3 cp /pictures s3://$BUCKET_NAME/camera/pictures/ --recursive
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/exit/testfile.txt
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/entrance/testfile.txt
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/private/testfile.txt
          aws s3api ./testfile.txt --region eu-west-1 --bucket $BUCKET_NAME --key camera/employee/testfile.txt
  
  
